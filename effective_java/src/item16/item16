Public클래스에서는 public 필드가 아닌 접근자 메서드를 사용하라

Class Point{
 public double x;
 public double y;
}
위 경우는 데이터 필드에 접근할 수 있다.
따라서 , 1.캡슐화 이점 제공x 
2.api수정하지 않고 내부표현 바꿈x
3.불변식 보장x
4.외부에서 필드에 접근할 때 부수작업 수행x

Public 클래스 라면!!
Class Point{
 private double x;
 private double y;

 public Point(double x, double y){
	this.x=x;
	this.y=y;
}
public double getX() {return x;}
public doubld getY() {return y;}

public void setX(double x) {this.x=x;}
public void setY(doubld y) {this.y=y}
}
패키지 바깥에서 접근할 수 있는 접근자 제공.
클래스 내부 표현 방식을 언제든 바꿀 수 있는 유연성 

하지만 Package-private클래스 혹은 private 중첩 클래스라면 데이터 필드를 노출한다 해도 문제가 없다.
public class Example {
    private static class InnerNested {
        public String memberField;
    }
    public void somePrint() {
        InnerNested instance = new InnerNested();
        System.out.println(instance.memberField);
    }
}
같은 패키지안에서 특정이유 때문에 사용하던가, 톱레벨 클래스에서만 접근 할 것이기 때문이다.
따라서, 패키지 바깥 코드는 전혀 손대지 않고도 데이터 표현 방식을 바꿀 수 있다.

요약
•	public 클래스는 절대 가변 필드를 노출해선 안된다.
•	불변 필드라면 노출해도 덜 위험 하지만 그래도 하지 말아라.
•	package-private 클래스, 톱 레벨 클래스에서는 노출하는 편이 나을 수도 있다.


