아이템54. Null이 아닌, 빈 컬렉션이나 배열을 반환하라

public class NullCollectionsTest {

    private final static List<Cheese> cheesesInStock = new ArrayList<>();


    public List<Cheese> getCheeses() {
        return cheesesInStock.isEmpty() ? null : new ArrayList<>(cheesesInStock);
    }

    public static void main(String[] args) {
        NullCollectionsTest shop = new NullCollectionsTest();
        cheesesInStock.add(Cheese.STILTON);

        List<Cheese> cheeses = shop.getCheeses();

        if(cheeses != null && cheeses.contains(Cheese.STILTON)){
            System.out.println("좋았어 바로 그거야");
        }
    }
}

컬렉션이나 배열 같은 컨테이너가 비었을 때 null을 반환하는 메서드를 사용할 때면 항시 이와 같은 방어 코드를 넣어줘야 한다.

빈 컬렉션을 반환하는 올바른예는??

public List<Cheese> getCheeses() {
    return new ArrayList<>(cheesesInStock);
}
빈 ‘불변’ 컬렉션을 반환하는 것.
불변객체는 자유롭게 공유해도 안전하다.

public List<Cheese> getCheeses() {
    return cheesesInStock.isEmpty() ? Collections.emptyList() : new ArrayList<>(cheesesInStock);
}
길이가 0인 배열을 반환하는 법.

public Cheese[] getCheeses() {
    return cheesesInStock.toArray(new Cheese[0]);
}
계속 생성하지 않게 길이 0짜리 배열을 미리 선언해두고 매번 그 배열을 반환한다.

private final static Cheese [] EMPTY_CHEESE_ARRAY = new Cheese[0];


public Cheese[] getCheeses() {
    return cheesesInStock.toArray(EMPTY_CHEESE_ARRAY);
}
cheeseInStock이 비었을 때면 언제나 EMPTY_CHEESE_ARRAY를 반환하게 된다.

핵심정리
Null이 아닌, 빈 배열이나 컬렉션을 반환하라.
